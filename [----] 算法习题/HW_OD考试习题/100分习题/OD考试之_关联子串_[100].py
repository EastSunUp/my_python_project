'''
题目描述
    给定两个字符串str1和str2，如果字符串str1中的字符，经过排列组合后的字符串中，
    只要有一个字符串是str2的子串，则认为str1是str2的关联子串。

    若str1是str2的关联子串，请返回子串在str2的起始位置；
    若不是关联子串，则返回-1。s
输入描述
    输入两个字符串，分别为题目中描述的str1、str2。
备注
    输入的字符串只包含小写字母；
    两个字符串的长度范围[1, 100000]之间；
输出描述
    若str1是str2的关联子串，请返回子串在str2的起始位置；
    若不是关联子串，则返回-1。
    若str2中有多个str1的组合子串，请返回最小的起始位置。
 ----------------------------------------------------------------------------------
示例1
    输入
        abc efghicbaiii
    输出
        5
    说明
        str2包含str1的一种排列组合（“cab”)，此组合在str2的字符串起始位置为5（从0开始计数）
示例2
    输入
        abc efghiccaiii
    输出
        -1
    说明
        “abc”字符串中三个字母的各种组合（abc、acb、bac、bca、cab、cba），
        str2中均不包含，因此返回-1
 ----------------------------------------------------------------------------------
解题思路
    给定两个字符串 str1 和 str2，需要判断 str1 的任意排列组合是否是 str2 的子串。
    如果是，则返回这个子串在 str2 中的起始位置；如果不是，则返回 -1。
排列组合：
    str1 的排列组合是指 str1 的所有字符按不同顺序排列所形成的字符串。
    比如，如果 str1 = "abc"，它的排列组合包括 abc, acb, bac, bca, cab, cba 等。
关联子串：
    如果 str2 包含 str1 的某个排列组合作为其子串，则称 str1 是 str2 的关联子串。
    例如：
        如果 str1 = "abc"，而 str2 = "efghicbaiii"，str2 包含 "cab" 这个子串
        （"cab" 是 str1 = "abc" 的一个排列组合），因此 str1 是 str2 的关联子串。
起始位置：
    如果 str1 是 str2 的关联子串，需要返回这个排列组合在 str2 中的起始位置，从 0 开始计数。
    如果有多个排列组合出现在 str2 中，需要返回最小的起始位置。
'''
str = 'efghiccaiii'
print(f"str[0]:{str[0]}")
print(f"str:{str}")

